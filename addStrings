import java.util.ArrayList;
import java.util.List;
public class Solution {
    public static void main(String args[]) {
        Solution solution = new Solution();
        
        try{
        System.out.println(solution.add("1,2,3", ','));
        }catch(Exception e) {
            System.out.println(e.getMessage());
        }
        try{
        System.out.println(solution.add("1,2\n3",','));   
        }catch(Exception e) {
            System.out.println(e.getMessage());
        }
        try{
        System.out.println(solution.add("1,\n",','));
        }catch(Exception e) {
            System.out.println(e.getMessage());
        }
        
         try{
        System.out.println(solution.add("//;\n1;2",';'));
        }catch(Exception e) {
            System.out.println(e.getMessage());
        }
        
        try{
        System.out.println(solution.add("1,-3,-2",','));
        }catch(Exception e) {
            System.out.println(e.getMessage());
        }
        
        try{
        System.out.println(solution.add("2,1001",','));
        }catch(Exception e) {
            System.out.println(e.getMessage());
        }
    }

    public int add(String str, char delimiter) throws Exception {
        if (str == null || str.length() == 0) {
            return 0;
        }
        if(str.equals("\n"))
        throw new Exception("Invalid");
        if(str.length()>=4&&str.charAt(0)=='/'&&str.charAt(1)=='/'&&str.charAt(3)=='\n')
        return add(str.substring(4),str.charAt(2));
        int result = 0;
        String[] numString = str.split(String.valueOf(delimiter));
        List<String> negativeList=new ArrayList<>();
        for (String number : numString) {
            try {
            int currNum = Integer.parseInt(number);
            if(currNum<0) {
                negativeList.add(String.valueOf(currNum));
            } else if(currNum<=1000)
            result += currNum;
            }catch(NumberFormatException e) {
                if(number.contains("\n")) {
                    result+=add(number,'\n');
                }
            }
        }
        if(negativeList.size()>0) {
            throw new Exception("negative numbers not allowed "+String.join(",",negativeList));
        }
        return result;
    }
}
